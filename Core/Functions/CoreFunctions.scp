[Function ContentWeight]
Return <Eval (<Weight> - <Serv.ItemDef.<BaseID>.Weight>)>


[Function AllResistances]
ResPhysical += <ArgN>
ResFire += <ArgN>
ResCold += <ArgN>
ResPoison += <ArgN>
ResEnergy += <ArgN>
Update


[Function CanReach]
If (<ArgN>)
 Return <QVal (<Distance> <= <ArgN>)> ? 1 : 0>
Else
 Return <QVal (<Distance> <= 3)> ? 1 : 0>
EndIf


// WandID
// Spell
// Spell Str
// Spell Charges
[Function GenerateWand]
If <IsEmpty <ArgS>>
 Serv.NewItem={iWand1 1 iWand2 1 iWand3 1 iWand4 1}
 New.MoreX={1 64}	// Standard Magery spells
 New.MoreY=1000
 New.More2=10
 New.Bounce <Src>
 Return
EndIf
If !(<ArgV0>)
 Serv.NewItem={iWand1 1 iWand2 1 iWand3 1 iWand4 1}
Else
 Serv.NewItem=<ArgV0>
EndIf
If !(<ArgV1>)
 New.MoreX={1 64}
Else
 New.MoreX=<ArgV1>
EndIf
If !(<ArgV2>)
 New.MoreY=1000
Else
 New.MoreY=<ArgV2>
EndIf
If !(<ArgV3>)
 New.More2=10
Else
 New.More2=<ArgV3>
EndIf
New.Bounce <Src>
Return


// Because these two function bother Xun because he knows I know better than to write a redundancy... but I really hate the @ Symbol in my code. Frustrating him is also perf af.
// These parse clilocs in says and messages. You could have just done it with say @,,2 <Cliloc>, but I am difficult. :D
[Function MessageLoc]
If <IsEmpty <ArgV0>>
 ArgV0=-1
EndIf
Message @<ArgV0>,,2 <ArgV1>


[Function SayLoc]
If <IsEmpty <ArgV0>>
 ArgV0=-1
EndIf
Say @<ArgV0>,,2 <ArgV1>


// Can be used in @HitTry. Use on Char or ArgO. Make sure there is no ArgO first.
[Function CheckSpeed]
Return <QVal (<Tag0.Override.Speed>) ? <Tag.Override.Speed> : <Speed>>


// Useful for old SkillMenus for older Servers wanting to use new items with older clients.
// Basically this can be used in the SkillMenu On= as shown below. It will grab the items ResLevel and 
// ResDispDnID and show it for you.
// E.G. On=<ExpResDisp iBladedStaff>
[Function ExpResDisp]
If (<Src.Account.ResLevel> >= <Serv.ItemDef.<ArgS>.ResLevel>)
 Return <ArgS>
EndIf
Local.Item=<Serv.ItemDef.<ArgS>.ResDispDnID>
If (<Local.Item>)
 Return <Local.Item>
EndIf
Return <ArgS>


[Function CalcLuck]
Return <Qval (<Luck> > 0) ? <Eval (((<Luck>/9)*5)/20)> : 0>


[Function AllStats]
OStr=<ArgN>
ODex=<ArgN>
OInt=<ArgN>


[Function ModMaxHits]
If !(ArgN)
 Return <Tag0.ModMaxHits>
EndIf
Tag.ModMaxHits=<Eval (<Tag0.ModMaxHits> + <ArgN>)>


[Function ModMaxStam]
If !(ArgN)
 Return <Tag0.ModMaxStam>
EndIf
Tag.ModMaxStam=<Eval (<Tag0.ModMaxStam> + <ArgN>)>


[Function ModMaxMana]
If !(ArgN)
 Return <Tag0.ModMaxMana>
EndIf
Tag.ModMaxMana=<Eval (<Tag0.ModMaxMana> + <ArgN>)>


[Function CheckExpansion]
If (<Expansion> &Expansion_T2A) && !(<Src.Expansion> &Expansion_T2A)
 Return 1
EndIf
If (<Expansion> &Expansion_LBR) && !(<Src.Expansion> &Expansion_LBR)
 Return 1
EndIf
If (<Expansion> &Expansion_AOS) && !(<Src.Expansion> &Expansion_AOS)
 Return 1
EndIf
If (<Expansion> &Expansion_SE) && !(<Src.Expansion> &Expansion_SE)
 Return 1
EndIf
If (<Expansion> &Expansion_ML) && !(<Src.Expansion> &Expansion_ML)
 Return 1
EndIf
If (<Expansion> &Expansion_SA) && !(<Src.Expansion> &Expansion_SA)
 Return 1
EndIf
If (<Expansion> &Expansion_HS) && !(<Src.Expansion> &Expansion_HS)
 Return 1
EndIf
If (<Expansion> &Expansion_TOL) && !(<Src.Expansion> &Expansion_TOL)
 Return 1
EndIf
If (<Expansion> &CrystalTheme) && !(<Src.Expansion> &CrystalTheme)
 Return 1
EndIf
If (<Expansion> &ShadowTheme) && !(<Src.Expansion> &ShadowTheme)
 Return 1
EndIf
If (<Expansion> &RusticTheme) && !(<Src.Expansion> &RusticTheme)
 Return 1
EndIf
If (<Expansion> &GothicTheme) && !(<Src.Expansion> &GothicTheme)
 Return 1
EndIf
If (<Expansion> &KingsCollectionTheme) && !(<Src.Expansion> &KingsCollectionTheme)
 Return 1
EndIf



[EOF]