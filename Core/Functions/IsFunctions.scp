[Function IsSavage]
Return <EVal ((<DispID> == cSavageFemale1) || (<DispID> == cSavageFemale2) || (<DispID> == cSavageMale1) || (<DispID> == cSavageMale2))>


[Function IsCommodity]
Return <EVal (<Can> &CanICommodity)>


[Function IsDeedable]
Return <EVal (<Can> &CanIDeedable)>


// Is Multi
[Function IsMulti]
Return <EVal ((<Type> == tMulti) || (<Type> == tCustomMulti))>


[Function IsFurniture]
Return <EVal ((<Type == tChair) || (<Type == tBed) || (<Type == tTable))>


[Function IsStatue]
Return <EVal (<IsTEvent.tStatue>)>


// Is Food
[Function IsFood]
Return <EVal ((<Type> == tFruit) || (<Type> == tVegetable) || (<Type> == tMeat) || (<Type> == tRawMeat) || (<Type> == tRawFood) || (<Type> == tFood) || (<Type> == tGrain))>


// Checks <ArgN> radius for Player's Corpse.
[Function IsNearMyCorpse]
ForItems <ArgN>
 If ((<Type> == tCorpse) && (<Link.UID> == <UID>))
  Return 1
 EndIf
EndFor


[Function IsShield]
Return (<Type> == tShield)>


[Function IsAlterable]
Return <EVal (<AlterItem>)>


// Racial/Gender Functions
[Function IsHuman]
Return <EVal ((<DispID> == cHumanMale) || (<DispID> == cHumanFemale))>


[Function IsElf]
Return <EVal ((<DispID> == cElfMale) || (<DispID> == cElfFemale))>


[Function IsGargoyle]
Return <EVal ((<DispID> == cGargoyleMale) || (<DispID> == cGargoyleFemale))>


[Function IsMale]
Return <EVal (<Can> &CanMale)>


[Function IsFemale]
Return <EVal (<Can> &CanFemale)>


[Function IsReagent]
Return <EVal (<Type> == tReagent)>


[Function IsIngredient]
Return <EVal (<Type> == tIngredient)>


[Function IsRangedWeapon]
Return <EVal ((<Skill> == Archery) || (<Skill> == Throwing))>


[Function IsArcheryWeapon]
Return <EVal (<Skill> == Archery)>


[Function IsThrowingWeapon]
Return <EVal ((<Skill> == Throwing))>


//
// Is* for new Armor TypeDefs
//

// IsArmor will be updated in Hard Code. We are adding Armor Categories now. Better control over each type.
[Function IsArmorType]
Return <EVal ((<Type> == tLeatherArmor) || (<Type> == tStuddedArmor) || (<Type> == tLeafArmor) || (<Type> == tHideArmor) || (<Type> == tClothArmor) || (<Type> == tChainmailArmor) || (<Type> == tRingmailArmor) || (<Type> == tPlatemailArmor) || (<Type> == tDragonArmor) || (<Type> == tStoneArmor) || (<Type> == tWoodlandArmor) || (<Type> == tBoneArmor) || (<Type> == tVirtueArmor))>


[Function IsNewArmor]
Return <EVal ((<Type> == tLeatherArmor) || (<Type> == tStuddedArmor) || (<Type> == tLeafArmor) || (<Type> == tHideArmor) || (<Type> == tClothArmor) || (<Type> == tChainmailArmor) || (<Type> == tRingmailArmor) || (<Type> == tPlatemailArmor) || (<Type> == tDragonArmor) || (<Type> == tStoneArmor) || (<Type> == tWoodlandArmor) || (<Type> == tBoneArmor) || (<Type> == tVirtueArmor))>


[Function IsLeatherArmor]
Return <EVal (<Type> == tLeatherArmor)>


[Function IsLeafArmor]
Return <EVal (<Type> == tLeafArmor)>


[Function IsFurArmor]
Return <EVal (<Type> == tFurArmor)>


[Function IsScuteArmor]
Return <EVal (<Type> == tScuteArmor)>


[Function IsClothArmor]
Return <EVal (<Type> == tClothArmor)>


[Function IsStuddedArmor]
Return <EVal (<Type> == tStuddedArmor)>


[Function IsBoneArmor]
Return <EVal (<Type> == tBoneArmor)>


[Function IsHideArmor]
Return <EVal (<Type> == tHideArmor)>


[Function IsChainmailArmor]
Return <EVal (<Type> == tChainmailArmor)>


[Function IsRingmailArmor]
Return <EVal (<Type> == tRingmailArmor)>


[Function IsPlatemailArmor]
Return <EVal (<Type> == tPlatemailArmor)>


[Function IsDragonArmor]
Return <EVal (<Type> == tDragonArmor)>


[Function IsStoneArmor]
Return <EVal (<Type> == tStoneArmor)>


[Function IsVirtueArmor]
Return <EVal (<Type> == tVirtueArmor)>


[Function IsWoodlandArmor]
Return <EVal (<Type> == tWoodlandArmor)>


[EOF]